{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// interface Product {\n//   id: number;\n//   name: string;\n//   price: number;\n//   description?: string;\n// }\n\nconst App = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    price: 0,\n    description: ''\n  });\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/product');\n      setProducts(response.data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   const { name, value } = e.target;\n  //   setNewProduct(prevState => ({\n  //     ...prevState,\n  //     [name]: value,\n  //   }));\n  // };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/product', newProduct);\n      setProducts([...products, response.data]);\n      setNewProduct({\n        name: '',\n        price: 0,\n        description: ''\n      });\n    } catch (error) {\n      console.error('Error creating product:', error);\n    }\n  };\n\n  //   return (\n  //     <div className=\"App\">\n  //       <h1>Enter Product</h1>\n  //       <form onSubmit={handleFormSubmit}>\n  //         <div>\n  //           <label htmlFor=\"name\">Name:</label>\n  //           <input\n  //             type=\"text\"\n  //             id=\"name\"\n  //             name=\"name\"\n  //             value={newProduct.name}\n  //             onChange={handleInputChange}\n  //             required\n  //           />\n  //         </div>\n  //         <div>\n  //           <label htmlFor=\"price\">Price:</label>\n  //           <input\n  //             type=\"number\"\n  //             id=\"price\"\n  //             name=\"price\"\n  //             value={newProduct.price}\n  //             onChange={handleInputChange}\n  //             required\n  //           />\n  //         </div>\n  //         <div>\n  //           <label htmlFor=\"description\">Description:</label>\n  //           <input\n  //             type=\"text\"\n  //             id=\"description\"\n  //             name=\"description\"\n  //             value={newProduct.description}\n  //             onChange={handleInputChange}\n  //           />\n  //         </div>\n  //         <button type=\"submit\">Add Product</button>\n  //       </form>\n  //       <ul>\n  //         {products.map(product => (\n  //           <li key={product.id}>\n  //             <h2>{product.name}</h2>\n  //             <p>Price: ${product.price}</p>\n  //             <p>{product.description}</p>\n  //           </li>\n  //         ))}\n  //       </ul>\n  //     </div>\n  //   );\n};\n_s(App, \"221urgfo6z/r3qLUwyQ1AKi5jS4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","App","_s","products","setProducts","newProduct","setNewProduct","name","price","description","fetchProducts","response","get","data","error","console","handleFormSubmit","e","preventDefault","post","_c","$RefreshReg$"],"sources":["C:/Users/malay/Desktop/shopping_cart/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\n// interface Product {\r\n//   id: number;\r\n//   name: string;\r\n//   price: number;\r\n//   description?: string;\r\n// }\r\n\r\nconst App: React.FC = () => {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [newProduct, setNewProduct] = useState({\r\n    name: '',\r\n    price: 0,\r\n    description: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/product');\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  // const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   const { name, value } = e.target;\r\n  //   setNewProduct(prevState => ({\r\n  //     ...prevState,\r\n  //     [name]: value,\r\n  //   }));\r\n  // };\r\n\r\n  const handleFormSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/product', newProduct);\r\n      setProducts([...products, response.data]);\r\n      setNewProduct({ name: '', price: 0, description: '' });\r\n    } catch (error) {\r\n      console.error('Error creating product:', error);\r\n    }\r\n  };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <h1>Enter Product</h1>\r\n//       <form onSubmit={handleFormSubmit}>\r\n//         <div>\r\n//           <label htmlFor=\"name\">Name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"name\"\r\n//             name=\"name\"\r\n//             value={newProduct.name}\r\n//             onChange={handleInputChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"price\">Price:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"price\"\r\n//             name=\"price\"\r\n//             value={newProduct.price}\r\n//             onChange={handleInputChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"description\">Description:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"description\"\r\n//             name=\"description\"\r\n//             value={newProduct.description}\r\n//             onChange={handleInputChange}\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Add Product</button>\r\n//       </form>\r\n//       <ul>\r\n//         {products.map(product => (\r\n//           <li key={product.id}>\r\n//             <h2>{product.name}</h2>\r\n//             <p>Price: ${product.price}</p>\r\n//             <p>{product.description}</p>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n };\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,SAAgBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC;IAC3CQ,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE;EACf,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,+BAA+B,CAAC;MACjER,WAAW,CAACO,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAME,gBAAgB,GAAG,MAAOC,CAAkB,IAAK;IACrDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMX,KAAK,CAACmB,IAAI,CAAC,+BAA+B,EAAEd,UAAU,CAAC;MAC9ED,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEQ,QAAQ,CAACE,IAAI,CAAC,CAAC;MACzCP,aAAa,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE,CAAC;QAAEC,WAAW,EAAE;MAAG,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACC,CAAC;AAACZ,EAAA,CAzFGD,GAAa;AAAAmB,EAAA,GAAbnB,GAAa;AA2FnB,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}